sort(unique(dat_sad2$crop_pathogen))
library(data.table)
count.dups <- function(DF){
DT <- data.table(DF)
DT[,.N, by = names(DT)]
}
crop_pathogen2 <- data.frame(count.dups(dat_sad2$crop_pathogen))
filter(crop_pathogen2, N > 1)
summary(dat_sad2$n_dev)
dat_sad2$crop2 <- with(dat_sad2, reorder(crop, crop, function(x) length(x)))
ggplot(dat_sad2, aes(crop2)) +
geom_bar(fill="navy") + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 1), expand=c(0.02, 0))+
xlab("")+ ylab("Number of articles")+
theme_minimal()
dat_sad2$crop2 <- with(dat_sad2, reorder(crop, crop, function(x) length(x)))
ggplot(dat_sad2, aes(crop2)) +
geom_bar(fill="navy") + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 1), expand=c(0.02, 0))+
xlab("")+ ylab("Number of articles")+
theme_grey()
dat_sad2$crop2 <- with(dat_sad2, reorder(crop, crop, function(x) length(x)))
ggplot(dat_sad2, aes(crop2)) +
geom_bar() + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 1), expand=c(0.02, 0))+
xlab("")+ ylab("Number of articles")+
theme_grey()
dat_sad2$crop2 <- with(dat_sad2, reorder(crop, crop, function(x) length(x)))
ggplot(dat_sad2, aes(crop2)) +
geom_bar() + coord_flip()+
scale_fill_viridis(discrete = TRUE)+
scale_y_continuous(breaks=seq(0, 100, 1), expand=c(0.02, 0))+
xlab("")+ ylab("Number of articles")+
theme_grey()
dat_sad2$crop2 <- with(dat_sad2, reorder(crop, crop, function(x) length(x)))
ggplot(dat_sad2, aes(crop2, fill = organ)) +
geom_bar() + coord_flip()+
scale_fill_viridis(discrete = TRUE)+
scale_y_continuous(breaks=seq(0, 100, 1), expand=c(0.02, 0))+
xlab("")+ ylab("Number of articles")+
theme_grey()
n_dev <- subset(dat_sad2, n_dev <1000, select = n_dev)
summary (n_dev)
hist(n_dev$n_dev, breaks=15, main="Samples used in SAD construction", xlab="Number of samples")
h1 <- ggplot(n_dev, aes(x=n_dev))+
geom_histogram(binwidth=50, colour = "white", fill = "SteelBlue")+
xlab("Number of samples")+
ylab("Frequency")+
scale_x_continuous(breaks=c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500))+
theme_minimal()
img_dev <- data.frame(table(dat_sad2$img_dev))
img_dev
sum(table(dat_sad2$study, dat_sad2$n_diag)[,4])
img_dev <- data.frame(table(dat_sad2$study,dat_sad2$sev_quant))
img_dev
table(dat_sad2$study,dat_sad2$sev_quant)
library(dplyr)
dat_sad2_study <- group_by(dat_sad2, study)
img_dev <- filter(dat_sad2_study, row_number(sev_quant)== 1)
data.frame(table(img_dev$sev_quant))
data.frame(table(img_dev$img_dev))
img_dev$sev_quant2 <- with(img_dev, reorder(sev_quant, sev_quant, function(x) length(x)))
h2 <- ggplot(img_dev, aes(sev_quant2)) +
geom_bar(fill="Steelblue", colour="white") + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 2),
expand=c(0.02, 0))+
xlab("")+ ylab("Number of studies")+
theme_minimal()+
scale_fill_discrete(name="Organ")+
theme(legend.justification=c(1,0), legend.position=c(1,0), legend.background = element_rect(fill="white"))
pfig <- plot_grid(h1, h2, align='h', labels=c('A', 'B'), rel_widths=c(1, 1.5))
ggsave("plots/fig4.png", plot=pfig, width=10, height=4.5)
img_dev$sev_quant2 <- with(img_dev, reorder(sev_quant, sev_quant, function(x) length(x)))
h2 <- ggplot(img_dev, aes(sev_quant2)) +
geom_bar(fill="Steelblue", colour="white") + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 2),
expand=c(0.02, 0))+
xlab("")+ ylab("Number of studies")+
theme_minimal()+
scale_fill_discrete(name="Organ")+
theme(legend.justification=c(1,0), legend.position=c(1,0), legend.background = element_rect(fill="white"))
plot_grid(h1, h2, align='h', labels=c('A', 'B'), rel_widths=c(1, 1.5))
img_diag_type <- table(dat_sad2$col_type, dat_sad2$diag_type)
img_diag_type
dat_sad2$col_type2 <- with(dat_sad2, reorder(col_type, col_type, function(x) length(x)))
ggplot(dat_sad2, aes(col_type2, fill=diag_type)) +
geom_bar() + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 5), expand=c(0.02, 0))+
xlab("")+ ylab("Number of SADs")+
theme(panel.background = element_rect(fill = 'white'))+
scale_fill_discrete(name="Organ")+scale_fill_brewer (palette="Greys")+
theme(legend.position="right")
dat_sad2$col_type2 <- with(dat_sad2, reorder(col_type, col_type, function(x) length(x)))
ggplot(dat_sad2, aes(col_type2, fill=diag_type)) +
geom_bar() + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 5), expand=c(0.02, 0))+
xlab("")+ ylab("Number of SADs")+
theme(panel.background = element_rect(fill = 'white'))+
scale_fill_discrete(name="Organ")+scale_fill_brewer (palette="Greys")+
theme_grey()+
scale_fill_viridis(discrete = TRUE)
dat_sad2$col_type2 <- with(dat_sad2, reorder(col_type, col_type, function(x) length(x)))
ggplot(dat_sad2, aes(col_type2, fill=diag_type)) +
geom_bar() + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 5), expand=c(0.02, 0))+
xlab("")+ ylab("Number of SADs")+
theme(panel.background = element_rect(fill = 'white'))+
scale_fill_discrete(name="Organ")+
theme_grey()+
scale_fill_viridis(discrete = TRUE)
dat_sad2$col_type2 <- with(dat_sad2, reorder(col_type, col_type, function(x) length(x)))
ggplot(dat_sad2, aes(col_type2, fill=diag_type)) +
geom_bar() + coord_flip()+
scale_y_continuous(breaks=seq(0, 100, 5), expand=c(0.02, 0))+
xlab("")+ ylab("Number of SADs")+
theme(panel.background = element_rect(fill = 'white'))+
theme_grey()+
scale_fill_viridis(discrete = TRUE)
n_diagrams <- table(dat_sad2$n_diagrams)
# table
data.frame(n_diagrams)
# histogram
barplot(n_diagrams, col="white", ylim=c(0,45))
g1<- ggplot(dat_sad2, aes(x=n_diagrams))+
geom_histogram( binwidth=1, colour = "white", fill = "steelblue")+
xlab("Number of diagrams")+
ylab("Frequency")+
scale_x_continuous(breaks=c(1:12))+
theme_minimal()
summary(dat_sad2$min_sev)
summary(dat_sad2$max_sev)
hist(dat_sad2$min_sev, breaks=20, main="Minimun severity", xlab="Severity (%)")
g2 <- ggplot(dat_sad2, aes(x=min_sev))+
geom_histogram( colour = "white", fill = "steelblue")+
xlab("Minimum severity (%)")+
ylab("Frequency")+
scale_x_continuous(breaks=c(0:11))+
theme_minimal()
g3 <- ggplot(dat_sad2, aes(x=max_sev))+
geom_histogram( colour = "white", fill = "steelblue")+
xlab("Maximum severity (%)")+
ylab("Frequency")+
scale_x_continuous(breaks=c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100 ))+
theme_minimal()
plot (dat_sad2$max_sev ~ dat_sad2$n_diagrams, xlab="Number of diagrams", ylab="Maximum severity (%)")
hist (dat_sad2$max_sev)
hist(dat_sad2$n_diagrams)
cor.test( dat_sad2$n_diagrams,dat_sad2$max_sev, method="pearson")
summary(lm(dat_sad2$max_sev ~ dat_sad2$n_diagrams))
g4 <- ggplot(dat_sad2, aes(max_sev, n_diagrams))+
geom_point(aes(alpha=0.5), size=5, colour = "steelblue",
position = position_jitter(height = .1, width=.2))+
stat_smooth(colour="steelblue", size=1, alpha=0.1)+
theme_minimal()+
theme(legend.position = "none")+
scale_y_continuous(breaks=c(1:12 ))+
ylab("Number of diagrams")+
xlab("Maximum severity (%)")
fig5 <- plot_grid(g1, g2, g3, g4, align='hv', labels=c('A', 'B', 'C', 'D'), rel_widths=c(1,1, 1, 1), scale=1)
ggsave("plots/fig5.png", plot=fig5, width=10, height=8)
plot (dat_sad2$max_sev ~ dat_sad2$n_diagrams, xlab="Number of diagrams", ylab="Maximum severity (%)")
hist (dat_sad2$max_sev)
hist(dat_sad2$n_diagrams)
cor.test( dat_sad2$n_diagrams,dat_sad2$max_sev, method="pearson")
summary(lm(dat_sad2$max_sev ~ dat_sad2$n_diagrams))
g4 <- ggplot(dat_sad2, aes(max_sev, n_diagrams))+
geom_point(aes(alpha=0.5), size=5, colour = "steelblue",
position = position_jitter(height = .1, width=.2))+
stat_smooth(colour="steelblue", size=1, alpha=0.1)+
theme_minimal()+
theme(legend.position = "none")+
scale_y_continuous(breaks=c(1:12 ))+
ylab("Number of diagrams")+
xlab("Maximum severity (%)")
plot_grid(g1, g2, g3, g4, align='hv', labels=c('A', 'B', 'C', 'D'), rel_widths=c(1,1, 1, 1), scale=1)
data.frame(table (dat_sad2$n_sads))
n_sads <- filter(dat_sad2, n_sads > 1)
n_sads[, c(8,14,16,46)]
data.frame(table (dat_sad1$validation))
data.frame(table (dat_sad1$stat))
table (dat_sad1$ validation, dat_sad1$coefs)
filter_validation <- filter(dat_sad1, validation=="Unaided_aided")
nraters <- filter(dat_sad, validation=="Unaided_aided")
table(nraters$rater_exp)
validation<-ddply(filter_validation,~study_diag,summarise,
study=min(study),
n_raters = length(study_diag),
pre_R2 = mean(unaided_R2),
post_R2 = mean(aided_R2),
pre_a= mean(unaided_a),
post_a=mean(aided_a),
pre_b = mean(unaided_b),
post_b = mean(aided_b)
)
filter_validation2 <- filter(dat_sad, validation=="Unaided_aided")
validation2<-ddply(filter_validation2,~study_diag,summarise,
study=min(study),
n_raters = length(study_diag),
pre_R2 = mean(unaided_R2),
post_R2 = mean(aided_R2),
pre_a= mean(unaided_a),
post_a=mean(aided_a),
pre_b = mean(unaided_b),
post_b = mean(aided_b)
)
validation2 <- data.frame(validation2[1], round(validation2[,-1], 3))
# number of SADs validated
length(validation2[-c(46,65,68)])
# Summary of the number of raters
sum(validation2$n_raters[-c(46,65,68,79)])
# histogram for the number of raters
hist(validation2$n_raters[-c(46,65,68,76)], main="Validation of SADs",
xlab="Number of raters", breaks=10)
ggplot(validation2, aes(x=n_raters))+
geom_histogram( binwidth=2, colour = "black", fill = "lightgrey")+
xlab("Number of raters")+
ylab("Frequency")+
#scale_x_continuous(breaks=c(1:12))+
theme(panel.background = element_rect(fill = 'white'))
# ggsave (file="plots/hist_n_raters.pdf", width=5, height=5)
devtools::install_github("rich-iannone/DiagrammeR")
library(DiagrammeR)
library(magrittr)
ndf <-
create_node_df(
n = 3,
label = TRUE)
ndf
ndf <-
create_node_df(
n = 3,
type = c("A", "A", "B"),
label = TRUE)
ndf
edf <-
create_edge_df(
from = c(1, 1),
to   = c(2, 3),
rel = c("X", "Y"))
edf
plot(edf)
the_graph <-
create_graph(
nodes_df = ndf,
edges_df = edf)
the_graph
the_graph <-
create_graph(
nodes_df = ndf,
edges_df = edf)
the_graph
render_graph(graph = the_graph, output = "graph")
render_graph(graph = the_graph, output = "vivagraph")
render_graph(graph = the_graph, output = "visNetwork")
render_graph(graph = the_graph, output = "graph")
render_graph(graph = the_graph, output = "vivagraph")
render_graph(graph = the_graph, output = "visNetwork")
render_graph(create_graph())
edf <-
create_edge_df(
from = c(1, 1),
to   = c(2, 3))
the_graph <- create_graph(edges_df = edf)
render_graph(graph = the_graph)
ndf <-
create_node_df(
n = 3,
label = TRUE)
ndf
ndf <-
create_node_df(
n = 3,
type = c("A", "A", "B"),
label = TRUE)
ndf
edf <-
create_edge_df(
from = c(1, 1),
to   = c(2, 3))
edf
edf <-
create_edge_df(
from = c(1, 1),
to   = c(2, 3),
rel = c("X", "Y"))
edf
the_graph <-
create_graph(
nodes_df = ndf,
edges_df = edf)
render_graph(graph = the_graph, output = "graph")
render_graph(graph = the_graph, output = "visNetwork")
render_graph(create_graph())
install.packages("googlesheets")
library(googlesheets)
library(dplyr)
(my_sheets <- gs_ls())
my_sheets %>% glimpse()
my_sheets
?googlesheets
gs_read(all-data-sad.xlsx)
gs_read("all-data-sad.xlsx")
gs_read(all-data-sad)
gs_read(Teste)
gs_read("Teste")
gap_ss <- gs_gap()
oceania_csv <- gs_read(gap_ss, ws = "Oceania")
str(oceania_csv)
oceania_csv
View(oceania_csv)
setwd("~/Dropbox/websites/TPP/qualis2015")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(DT)
library(readxl)
tabela <- read_excel("agrarias-2015.xlsx")
View(tabela)
library(tidyverse)
library(DT)
library(readxl)
tabela <- read_excel("agrarias-2015.xlsx")
datatable(tabela,
escape = FALSE,
class = 'cell-border stripe',
rownames = FALSE, colnames = c('Título', 'Estrato do Qualis'),
options = list(
pageLength = 25,
fontSize = 12,
lengthMenu = c(10, 25, 50, 100 )
))%>%
formatStyle(
c('Titulo', 'Estrato'),
fontSize = '90%')
library(ggplot2)
tabela %>%
ggplot(aes(x = Estrato, color = Estrato))+
geom_histogram()
library(ggplot2)
tabela %>%
ggplot(aes(x = Estrato, color = Estrato))+
geom_bar(stat="count")
library(ggplot2)
tabela %>%
ggplot(aes(x = Estrato, fill = Estrato))+
geom_bar(stat="count")
library(ggplot2)
library(viridis)
tabela %>%
ggplot(aes(x = Estrato, fill = Estrato))+
geom_bar(stat="count")+
scale_fill_viridis()
library(ggplot2)
library(viridis)
tabela %>%
ggplot(aes(x = Estrato, fill = Estrato))+
geom_bar(stat="count")+
scale_fill_viridis(discrete = T)
library(ggplot2)
library(viridis)
tabela %>%
ggplot(aes(x = Estrato, fill = Estrato))+
geom_bar(stat="count")+
scale_fill_viridis(discrete = T)+
labs(y = "Número de periódicos")
datatable(tabela,
escape = FALSE,
class = 'cell-border stripe',
rownames = FALSE, colnames = c('Título', 'Estrato do Qualis'),
options = list(
pageLength = 25,
fontSize = 12,
lengthMenu = c(10, 25, 50, 100, 500 )
))%>%
formatStyle(
c('Titulo', 'Estrato'),
fontSize = '90%')
library(plotly)
library(strinr)
library(stringr)
plot2 <- tabela %>%
filter(str_detect(Estrato, 'Plant|Pathology')) %>%
ggplot(aes(x = Titulo))+
geom_bar(stat="count")+
scale_fill_viridis(discrete = T)+
labs(y = "")
(gg <- ggplotly(plot2, tooltip = c("count")))
tabela %>%
filter(str_detect(Estrato, 'Plant|Pathology'))
library(stringr)
plot2 <- tabela %>%
filter(str_detect(Titulo, 'Plant|Pathology')) %>%
ggplot(aes(x = Titulo))+
geom_bar(stat="count")+
scale_fill_viridis(discrete = T)+
labs(y = "")
(gg <- ggplotly(plot2, tooltip = c("count")))
tabela %>%
filter(str_detect(Titulo, 'Plant|Pathology'))
tabela %>%
filter(str_detect(Titulo, 'Pathology'))
tabela %>%
filter(str_detect(Titulo, 'Pathology|Disease'))
tabela %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE'))
tabela %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease'))
library(stringr)
plot2 <- tabela %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease')) %>%
ggplot(aes(x = Titulo))+
geom_bar(stat="count")+
coord_flip()+
scale_fill_viridis(discrete = T)+
labs(y = "")
(gg <- ggplotly(plot2, tooltip = c("count")))
library(stringr)
tabela %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease'))
library(stringr)
tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease'))
tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY'))
library(stringr)
tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY'))
library(stringr)
tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY|DISEASES|Diseases'))
library(stringr)
tabela %>%
filter(Estrato == "A1" & Estrato == "A2") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY|DISEASES|Diseases'))
library(stringr)
tabela %>%
filter(Estrato == c("A1, "A2")) %>%
library(stringr)
tabela %>%
filter(Estrato == "A1, Estrato == "A2") %>%
library(stringr)
tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY|DISEASES|Diseases'))
A1 <- tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY|DISEASES|Diseases'))
kable(A1)
library(tidyverse)
library(DT)
library(readxl)
library(plotly)
library(stringr)
library(knitr)
tabela <- read_excel("agrarias-2015.xlsx")
datatable(tabela,
escape = FALSE,
class = 'cell-border stripe',
rownames = FALSE, colnames = c('Título', 'Estrato do Qualis'),
options = list(
pageLength = 25,
fontSize = 12,
lengthMenu = c(10, 25, 50, 100, 500 )
))%>%
formatStyle(
c('Titulo', 'Estrato'),
fontSize = '90%')
library(ggplot2)
library(viridis)
plot1 <- tabela %>%
ggplot(aes(x = Estrato, fill = Estrato))+
geom_bar(stat="count")+
scale_fill_viridis(discrete = T)+
labs(y = "Número de periódicos")
(gg <- ggplotly(plot1, tooltip = c("count")))
A1 <- tabela %>%
filter(Estrato == "A1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY|DISEASES|Diseases'))
kable(A1)
B1 <- tabela %>%
filter(Estrato == "B1") %>%
filter(str_detect(Titulo, 'PATHOLOGY|DISEASE|Pathology|Disease|PROTECTION|Protection|Phytopathology|PHYTOPATHOLOGY|DISEASES|Diseases'))
kable (B1)
?str_detect
library(rcrossref)
queries <- c("Piwowar sharing data PLOS one", "Priem Scientometrics 2.0 social web",
"William Gunn A Crosstalk Between Myeloma Cells",
"karthik ram Metapopulation dynamics override local limits")
cr_search_free(queries)[,-4]
cr_journals(queries)[,-4]
cr_works("Phytopathology")
cr_journals("Phytopathology")
cr_journals(query = "Phytopathology")
phyto <- cr_journals(query = "Phytopathology")
phyto
phyto$data
tabela <- read_excel("agrarias-2015.xlsx")
datatable(tabela,
escape = FALSE,
class = 'cell-border stripe',
rownames = FALSE, colnames = c('Título', 'Estrato do Qualis'),
options = list(
pageLength = 25,
fontSize = 12,
lengthMenu = c(10, 25, 50, 100, 500 )
))%>%
formatStyle(
c('Titulo', 'Estrato'),
fontSize = '90%')
